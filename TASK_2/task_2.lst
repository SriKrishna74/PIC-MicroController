

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Fri Feb 16 15:33:29 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_RB0
    44                           psect	maintext,global,class=CODE,delta=2
    45                           global __pmaintext
    46  07BA                     __pmaintext:
    47  0030                     _RB0	set	48
    48                           	global	_RB1
    49  0031                     _RB1	set	49
    50                           	global	_TRISB0
    51  0430                     _TRISB0	set	1072
    52                           	global	_TRISB1
    53  0431                     _TRISB1	set	1073
    54                           	file	"task_2.as"
    55                           	line	#
    56                           psect cinit,class=CODE,delta=2
    57                           global start_initialization
    58  07B6                     start_initialization:
    59                           
    60                           psect cinit,class=CODE,delta=2
    61                           global end_of_initialization
    62                           
    63                           ;End of C runtime variable initialization code
    64                           
    65  07B6                     end_of_initialization:
    66  07B6  0183               clrf status
    67  07B7  120A  118A  2FBA   ljmp _main	;jump to C main() function
    68                           psect	cstackCOMMON,class=COMMON,space=1
    69                           global __pcstackCOMMON
    70  0070                     __pcstackCOMMON:
    71                           	global	?_main
    72  0070                     ?_main:	; 0 bytes @ 0x0
    73                           	global	??_main
    74  0070                     ??_main:	; 0 bytes @ 0x0
    75                           	global	main@count
    76  0070                     main@count:	; 2 bytes @ 0x0
    77  0070                     	ds	2
    78                           	global	main@count_300
    79  0072                     main@count_300:	; 2 bytes @ 0x2
    80  0072                     	ds	2
    81                           	global	main@count_299
    82  0074                     main@count_299:	; 2 bytes @ 0x4
    83  0074                     	ds	2
    84 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    85 ;;Auto spaces:   Size  Autos    Used
    86 ;; COMMON          14      6       6
    87 ;; BANK0           80      0       0
    88 ;; BANK1           80      0       0
    89 ;; BANK3           96      0       0
    90 ;; BANK2           96      0       0
    91                           
    92 ;;
    93 ;; Pointer list with targets:
    94                           
    95                           
    96                           
    97 ;;
    98 ;; Critical Paths under _main in COMMON
    99 ;;
   100 ;;   None.
   101 ;;
   102 ;; Critical Paths under _main in BANK0
   103 ;;
   104 ;;   None.
   105 ;;
   106 ;; Critical Paths under _main in BANK1
   107 ;;
   108 ;;   None.
   109 ;;
   110 ;; Critical Paths under _main in BANK3
   111 ;;
   112 ;;   None.
   113 ;;
   114 ;; Critical Paths under _main in BANK2
   115 ;;
   116 ;;   None.
   117                           
   118 ;;
   119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   120 ;;
   121                           
   122 ;;
   123 ;;Call Graph Tables:
   124 ;;
   125 ;; ---------------------------------------------------------------------------------
   126 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   127 ;; ---------------------------------------------------------------------------------
   128 ;; (0) _main                                                 6     6      0      60
   129 ;;                                              0 COMMON     6     6      0
   130 ;; ---------------------------------------------------------------------------------
   131 ;; Estimated maximum stack depth 0
   132 ;; ---------------------------------------------------------------------------------
   133                           
   134 ;; Call Graph Graphs:
   135                           
   136 ;; _main (ROOT)
   137 ;;
   138                           
   139 ;; Address spaces:
   140                           
   141 ;;Name               Size   Autos  Total    Cost      Usage
   142 ;;BITCOMMON            E      0       0       0        0.0%
   143 ;;EEDATA             100      0       0       0        0.0%
   144 ;;NULL                 0      0       0       0        0.0%
   145 ;;CODE                 0      0       0       0        0.0%
   146 ;;COMMON               E      6       6       1       42.9%
   147 ;;BITSFR0              0      0       0       1        0.0%
   148 ;;SFR0                 0      0       0       1        0.0%
   149 ;;BITSFR1              0      0       0       2        0.0%
   150 ;;SFR1                 0      0       0       2        0.0%
   151 ;;STACK                0      0       0       2        0.0%
   152 ;;ABS                  0      0       0       3        0.0%
   153 ;;BITBANK0            50      0       0       4        0.0%
   154 ;;BITSFR3              0      0       0       4        0.0%
   155 ;;SFR3                 0      0       0       4        0.0%
   156 ;;BANK0               50      0       0       5        0.0%
   157 ;;BITSFR2              0      0       0       5        0.0%
   158 ;;SFR2                 0      0       0       5        0.0%
   159 ;;BITBANK1            50      0       0       6        0.0%
   160 ;;BANK1               50      0       0       7        0.0%
   161 ;;BITBANK3            60      0       0       8        0.0%
   162 ;;BANK3               60      0       0       9        0.0%
   163 ;;BITBANK2            60      0       0      10        0.0%
   164 ;;BANK2               60      0       0      11        0.0%
   165 ;;DATA                 0      0       0      12        0.0%
   166                           
   167                           	global	_main
   168                           psect	maintext
   169                           
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 5 in file "D:\Microchip\MY_PROJECTS\TASK_2\Task_2.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;  count           2    2[COMMON] int 
   177 ;;  count           2    4[COMMON] int 
   178 ;;  count           2    0[COMMON] int 
   179 ;; Return value:  Size  Location     Type
   180 ;;		None               void
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0
   183 ;; Tracked objects:
   184 ;;		On entry : 17F/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   188 ;;      Params:         0       0       0       0       0
   189 ;;      Locals:         6       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0
   191 ;;      Totals:         6       0       0       0       0
   192 ;;Total ram usage:        6 bytes
   193 ;; This function calls:
   194 ;;		Nothing
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           psect	maintext
   200                           	file	"D:\Microchip\MY_PROJECTS\TASK_2\Task_2.c"
   201                           	line	5
   202                           	global	__size_of_main
   203  0046                     	__size_of_main	equ	__end_of_main-_main
   204                           	
   205  07BA                     _main:	
   206                           	opt	stack 8
   207                           ; Regs used in _main: [wreg+status,2+status,0]
   208                           	line	6
   209                           	
   210  07BA                     l941:	
   211                           ;Task_2.c: 6: TRISB0 = 1;
   212  07BA  1683               	bsf	status, 5	;RP0=1, select bank1
   213  07BB  1303               	bcf	status, 6	;RP1=0, select bank1
   214  07BC  1406               	bsf	(1072/8)^080h,(1072)&7
   215                           	line	7
   216                           ;Task_2.c: 7: TRISB1 = 0;
   217  07BD  1086               	bcf	(1073/8)^080h,(1073)&7
   218                           	line	8
   219                           	
   220  07BE                     l943:	
   221                           ;Task_2.c: 8: int count = 0;
   222  07BE  3000               	movlw	low(0)
   223  07BF  00F0               	movwf	(main@count)
   224  07C0  3000               	movlw	high(0)
   225  07C1  00F1               	movwf	((main@count))+1
   226                           	line	9
   227                           ;Task_2.c: 9: while(1)
   228                           	
   229  07C2                     l559:	
   230                           	line	11
   231                           ;Task_2.c: 10: {
   232                           ;Task_2.c: 11: int count = 0;
   233  07C2  3000               	movlw	low(0)
   234  07C3  00F4               	movwf	(main@count_299)
   235  07C4  3000               	movlw	high(0)
   236  07C5  00F5               	movwf	((main@count_299))+1
   237                           	line	12
   238                           	
   239  07C6                     l945:	
   240                           ;Task_2.c: 12: if(RB0 == 1)
   241  07C6  1283               	bcf	status, 5	;RP0=0, select bank0
   242  07C7  1C06               	btfss	(48/8),(48)&7
   243  07C8  2FCA               	goto	u11
   244  07C9  2FCB               	goto	u10
   245  07CA                     u11:
   246  07CA  2FC2               	goto	l559
   247  07CB                     u10:
   248  07CB  2FD6               	goto	l951
   249                           	line	14
   250                           	
   251  07CC                     l947:	
   252                           ;Task_2.c: 13: {
   253                           ;Task_2.c: 14: while(RB0==0)
   254  07CC  2FD6               	goto	l951
   255                           	
   256  07CD                     l562:	
   257                           	line	16
   258                           	
   259  07CD                     l949:	
   260                           ;Task_2.c: 15: {
   261                           ;Task_2.c: 16: int count = count+1;
   262  07CD  0872               	movf	(main@count_300),w
   263  07CE  3E01               	addlw	low(01h)
   264  07CF  00F2               	movwf	(main@count_300)
   265  07D0  0873               	movf	(main@count_300+1),w
   266  07D1  1803               	skipnc
   267  07D2  3E01               	addlw	1
   268  07D3  3E00               	addlw	high(01h)
   269  07D4  00F3               	movwf	1+(main@count_300)
   270  07D5  2FD6               	goto	l951
   271                           	line	17
   272                           	
   273  07D6                     l561:	
   274                           	line	14
   275                           	
   276  07D6                     l951:	
   277  07D6  1C06               	btfss	(48/8),(48)&7
   278  07D7  2FD9               	goto	u21
   279  07D8  2FDA               	goto	u20
   280  07D9                     u21:
   281  07D9  2FCD               	goto	l949
   282  07DA                     u20:
   283  07DA  2FDB               	goto	l953
   284                           	
   285  07DB                     l563:	
   286                           	line	18
   287                           	
   288  07DB                     l953:	
   289                           ;Task_2.c: 17: }
   290                           ;Task_2.c: 18: if(count == 1)
   291  07DB  3001               	movlw	01h
   292  07DC  0674               	xorwf	(main@count_299),w
   293  07DD  0475               	iorwf	(main@count_299+1),w
   294  07DE  1D03               	skipz
   295  07DF  2FE1               	goto	u31
   296  07E0  2FE2               	goto	u30
   297  07E1                     u31:
   298  07E1  2FE4               	goto	l957
   299  07E2                     u30:
   300                           	line	20
   301                           	
   302  07E2                     l955:	
   303                           ;Task_2.c: 19: {
   304                           ;Task_2.c: 20: RB1 = 1;
   305  07E2  1486               	bsf	(49/8),(49)&7
   306                           	line	21
   307                           ;Task_2.c: 21: }
   308  07E3  2FC2               	goto	l559
   309                           	line	22
   310                           	
   311  07E4                     l564:	
   312                           	
   313  07E4                     l957:	
   314                           ;Task_2.c: 22: else if(count == 2)
   315  07E4  3002               	movlw	02h
   316  07E5  0674               	xorwf	(main@count_299),w
   317  07E6  0475               	iorwf	(main@count_299+1),w
   318  07E7  1D03               	skipz
   319  07E8  2FEA               	goto	u41
   320  07E9  2FEB               	goto	u40
   321  07EA                     u41:
   322  07EA  2FED               	goto	l961
   323  07EB                     u40:
   324                           	line	24
   325                           	
   326  07EB                     l959:	
   327                           ;Task_2.c: 23: {
   328                           ;Task_2.c: 24: RB1 = 0;
   329  07EB  1086               	bcf	(49/8),(49)&7
   330                           	line	25
   331                           ;Task_2.c: 25: }
   332  07EC  2FC2               	goto	l559
   333                           	line	26
   334                           	
   335  07ED                     l566:	
   336                           	
   337  07ED                     l961:	
   338                           ;Task_2.c: 26: else if(count == 3)
   339  07ED  3003               	movlw	03h
   340  07EE  0674               	xorwf	(main@count_299),w
   341  07EF  0475               	iorwf	(main@count_299+1),w
   342  07F0  1D03               	skipz
   343  07F1  2FF3               	goto	u51
   344  07F2  2FF4               	goto	u50
   345  07F3                     u51:
   346  07F3  2FF6               	goto	l568
   347  07F4                     u50:
   348                           	line	28
   349                           	
   350  07F4                     l963:	
   351                           ;Task_2.c: 27: {
   352                           ;Task_2.c: 28: RB1 = 1;
   353  07F4  1486               	bsf	(49/8),(49)&7
   354                           	line	29
   355                           ;Task_2.c: 29: }
   356  07F5  2FC2               	goto	l559
   357                           	line	30
   358                           	
   359  07F6                     l568:	
   360                           	line	32
   361                           ;Task_2.c: 30: else
   362                           ;Task_2.c: 31: {
   363                           ;Task_2.c: 32: RB1 = 0;
   364  07F6  1086               	bcf	(49/8),(49)&7
   365  07F7  2FC2               	goto	l559
   366                           	line	33
   367                           	
   368  07F8                     l569:	
   369  07F8  2FC2               	goto	l559
   370                           	
   371  07F9                     l567:	
   372  07F9  2FC2               	goto	l559
   373                           	
   374  07FA                     l565:	
   375  07FA  2FC2               	goto	l559
   376                           	line	34
   377                           	
   378  07FB                     l560:	
   379  07FB  2FC2               	goto	l559
   380                           	line	35
   381                           	
   382  07FC                     l570:	
   383                           	line	9
   384  07FC  2FC2               	goto	l559
   385                           	
   386  07FD                     l571:	
   387                           	line	36
   388                           	
   389  07FD                     l572:	
   390                           	global	start
   391  07FD  120A  118A  2800   	ljmp	start
   392                           	opt stack 0
   393                           GLOBAL	__end_of_main
   394  0800                     	__end_of_main:
   395 ;; =============== function _main ends ============
   396                           
   397                           	signat	_main,88
   398                           psect	maintext
   399                           	global	btemp
   400  007E                     	btemp set 07Eh
   401                           
   402                           	DABS	1,126,2	;btemp
   403                           	global	wtemp0
   404  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Fri Feb 16 15:33:29 2024

                  u10 07CB                    u11 07CA                    u20 07DA                    u21 07D9  
                  u30 07E2                    u31 07E1                    u40 07EB                    u41 07EA  
                  u50 07F4                    u51 07F3                   l560 07FB                   l561 07D6  
                 l570 07FC                   l562 07CD                   l571 07FD                   l563 07DB  
                 l572 07FD                   l564 07E4                   l565 07FA                   l566 07ED  
                 l567 07F9                   l559 07C2                   l568 07F6                   l569 07F8  
                 l941 07BA                   l951 07D6                   l943 07BE                   l961 07ED  
                 l953 07DB                   l945 07C6                   l963 07F4                   l955 07E2  
                 l947 07CC                   l957 07E4                   l949 07CD                   l959 07EB  
                 _RB0 0030                   _RB1 0031                  _main 07BA                  btemp 007E  
                start 0000                 ?_main 0070                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 0070         main@count_300 0072         main@count_299 0074  
              _TRISB0 0430                _TRISB1 0431        __pcstackCOMMON 0070            __pmaintext 07BA  
end_of_initialization 07B6   start_initialization 07B6             main@count 0070         __size_of_main 0046  
